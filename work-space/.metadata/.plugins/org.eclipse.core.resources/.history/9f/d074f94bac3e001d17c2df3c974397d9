	/*
 * 
 */
package ui_concrete.diagram.navigator;

/**
 * @generated
 */
public class Ui_concreteNavigatorLabelProvider extends org.eclipse.jface.viewers.LabelProvider implements org.eclipse.ui.navigator.ICommonLabelProvider, org.eclipse.jface.viewers.ITreePathLabelProvider {

		/**
 * @generated
 */
static {
	ui_concrete.diagram.part.Ui_concreteDiagramEditorPlugin.getInstance().getImageRegistry().put("Navigator?UnknownElement", org.eclipse.jface.resource.ImageDescriptor.getMissingImageDescriptor());  //$NON-NLS-1$
	ui_concrete.diagram.part.Ui_concreteDiagramEditorPlugin.getInstance().getImageRegistry().put("Navigator?ImageNotFound", org.eclipse.jface.resource.ImageDescriptor.getMissingImageDescriptor());  //$NON-NLS-1$
}
	
		/**
 * @generated
 */
public void updateLabel(org.eclipse.jface.viewers.ViewerLabel label, org.eclipse.jface.viewers.TreePath elementPath) {
	Object element = elementPath.getLastSegment();
	if (element instanceof ui_concrete.diagram.navigator.Ui_concreteNavigatorItem && !isOwnView(((ui_concrete.diagram.navigator.Ui_concreteNavigatorItem) element).getView())) {
		return;
	}
	label.setText(getText(element));
	label.setImage(getImage(element));
}
	
		/**
 * @generated
 */
public org.eclipse.swt.graphics.Image getImage(Object element) {
	if (element instanceof ui_concrete.diagram.navigator.Ui_concreteNavigatorGroup) {
	ui_concrete.diagram.navigator.Ui_concreteNavigatorGroup group = (ui_concrete.diagram.navigator.Ui_concreteNavigatorGroup) element;
	return ui_concrete.diagram.part.Ui_concreteDiagramEditorPlugin.getInstance().getBundledImage(group.getIcon());
}

	if (element instanceof ui_concrete.diagram.navigator.Ui_concreteNavigatorItem) {
	ui_concrete.diagram.navigator.Ui_concreteNavigatorItem navigatorItem = (ui_concrete.diagram.navigator.Ui_concreteNavigatorItem) element;
	if (!isOwnView(navigatorItem.getView())) {
		return super.getImage(element);
	}
	return getImage(navigatorItem.getView());
}

	// Due to plugin.xml content will be called only for "own" views
if (element instanceof org.eclipse.core.runtime.IAdaptable) {
	org.eclipse.gmf.runtime.notation.View view = (org.eclipse.gmf.runtime.notation.View) ((org.eclipse.core.runtime.IAdaptable) element).getAdapter(org.eclipse.gmf.runtime.notation.View.class);
	if (view != null && isOwnView(view)) {
		return getImage(view);
	}
}

		return super.getImage(element);
}
	
		/**
 * @generated
 */
public org.eclipse.swt.graphics.Image getImage(org.eclipse.gmf.runtime.notation.View view) {
		switch (ui_concrete.diagram.part.Ui_concreteVisualIDRegistry.getVisualID(view)) {
		case ui_concrete.diagram.edit.parts.UI_DiagramEditPart.VISUAL_ID:
	return getImage("Navigator?Diagram?ui_concrete?UI_Diagram", ui_concrete.diagram.providers.Ui_concreteElementTypes.UI_Diagram_1000); //$NON-NLS-1$
case ui_concrete.diagram.edit.parts.UserInterfaceEditPart.VISUAL_ID:
	return getImage("Navigator?TopLevelNode?ui_concrete?UserInterface", ui_concrete.diagram.providers.Ui_concreteElementTypes.UserInterface_2001); //$NON-NLS-1$
case ui_concrete.diagram.edit.parts.GroupEditPart.VISUAL_ID:
	return getImage("Navigator?Node?ui_concrete?Group", ui_concrete.diagram.providers.Ui_concreteElementTypes.Group_3001); //$NON-NLS-1$
case ui_concrete.diagram.edit.parts.Group2EditPart.VISUAL_ID:
	return getImage("Navigator?Node?ui_concrete?Group", ui_concrete.diagram.providers.Ui_concreteElementTypes.Group_3002); //$NON-NLS-1$
case ui_concrete.diagram.edit.parts.ButtonEditPart.VISUAL_ID:
	return getImage("Navigator?Node?ui_concrete?Button", ui_concrete.diagram.providers.Ui_concreteElementTypes.Button_3003); //$NON-NLS-1$
case ui_concrete.diagram.edit.parts.LabelEditPart.VISUAL_ID:
	return getImage("Navigator?Node?ui_concrete?Label", ui_concrete.diagram.providers.Ui_concreteElementTypes.Label_3004); //$NON-NLS-1$
case ui_concrete.diagram.edit.parts.CheckBoxEditPart.VISUAL_ID:
	return getImage("Navigator?Node?ui_concrete?CheckBox", ui_concrete.diagram.providers.Ui_concreteElementTypes.CheckBox_3005); //$NON-NLS-1$
case ui_concrete.diagram.edit.parts.TextInputEditPart.VISUAL_ID:
	return getImage("Navigator?Node?ui_concrete?TextInput", ui_concrete.diagram.providers.Ui_concreteElementTypes.TextInput_3006); //$NON-NLS-1$
case ui_concrete.diagram.edit.parts.ImageEditPart.VISUAL_ID:
	return getImage("Navigator?Node?ui_concrete?Image", ui_concrete.diagram.providers.Ui_concreteElementTypes.Image_3007); //$NON-NLS-1$
case ui_concrete.diagram.edit.parts.ListEditPart.VISUAL_ID:
	return getImage("Navigator?Node?ui_concrete?List", ui_concrete.diagram.providers.Ui_concreteElementTypes.List_3008); //$NON-NLS-1$
case ui_concrete.diagram.edit.parts.RadioButtonEditPart.VISUAL_ID:
	return getImage("Navigator?Node?ui_concrete?RadioButton", ui_concrete.diagram.providers.Ui_concreteElementTypes.RadioButton_3009); //$NON-NLS-1$
case ui_concrete.diagram.edit.parts.Button2EditPart.VISUAL_ID:
	return getImage("Navigator?Node?ui_concrete?Button", ui_concrete.diagram.providers.Ui_concreteElementTypes.Button_3010); //$NON-NLS-1$
case ui_concrete.diagram.edit.parts.Label2EditPart.VISUAL_ID:
	return getImage("Navigator?Node?ui_concrete?Label", ui_concrete.diagram.providers.Ui_concreteElementTypes.Label_3011); //$NON-NLS-1$
case ui_concrete.diagram.edit.parts.CheckBox2EditPart.VISUAL_ID:
	return getImage("Navigator?Node?ui_concrete?CheckBox", ui_concrete.diagram.providers.Ui_concreteElementTypes.CheckBox_3012); //$NON-NLS-1$
case ui_concrete.diagram.edit.parts.TextInput2EditPart.VISUAL_ID:
	return getImage("Navigator?Node?ui_concrete?TextInput", ui_concrete.diagram.providers.Ui_concreteElementTypes.TextInput_3013); //$NON-NLS-1$
case ui_concrete.diagram.edit.parts.Image2EditPart.VISUAL_ID:
	return getImage("Navigator?Node?ui_concrete?Image", ui_concrete.diagram.providers.Ui_concreteElementTypes.Image_3014); //$NON-NLS-1$
case ui_concrete.diagram.edit.parts.List2EditPart.VISUAL_ID:
	return getImage("Navigator?Node?ui_concrete?List", ui_concrete.diagram.providers.Ui_concreteElementTypes.List_3015); //$NON-NLS-1$
case ui_concrete.diagram.edit.parts.RadioButton2EditPart.VISUAL_ID:
	return getImage("Navigator?Node?ui_concrete?RadioButton", ui_concrete.diagram.providers.Ui_concreteElementTypes.RadioButton_3016); //$NON-NLS-1$
	}
		return getImage("Navigator?UnknownElement", null);  //$NON-NLS-1$
}
	
		/**
 * @generated
 */
private org.eclipse.swt.graphics.Image getImage(String key, org.eclipse.gmf.runtime.emf.type.core.IElementType elementType) {
	org.eclipse.jface.resource.ImageRegistry imageRegistry = ui_concrete.diagram.part.Ui_concreteDiagramEditorPlugin.getInstance().getImageRegistry();
	org.eclipse.swt.graphics.Image image = imageRegistry.get(key);
	if (image == null && elementType != null && ui_concrete.diagram.providers.Ui_concreteElementTypes.isKnownElementType(elementType)) {
		image = ui_concrete.diagram.providers.Ui_concreteElementTypes.getImage(elementType);
		imageRegistry.put(key, image);
	}
			
	if (image == null) {
		image = imageRegistry.get("Navigator?ImageNotFound");  //$NON-NLS-1$
		imageRegistry.put(key, image);
	}
	return image;
}
	
		/**
 * @generated
 */
public String getText(Object element) {
	if (element instanceof ui_concrete.diagram.navigator.Ui_concreteNavigatorGroup) {
	ui_concrete.diagram.navigator.Ui_concreteNavigatorGroup group = (ui_concrete.diagram.navigator.Ui_concreteNavigatorGroup) element;
	return group.getGroupName();
}

	if (element instanceof ui_concrete.diagram.navigator.Ui_concreteNavigatorItem) {
	ui_concrete.diagram.navigator.Ui_concreteNavigatorItem navigatorItem = (ui_concrete.diagram.navigator.Ui_concreteNavigatorItem) element;
   		if (!isOwnView(navigatorItem.getView())) {
   			return null;
   		}
   		return getText(navigatorItem.getView());
	}

	// Due to plugin.xml content will be called only for "own" views
if (element instanceof org.eclipse.core.runtime.IAdaptable) {
	org.eclipse.gmf.runtime.notation.View view = (org.eclipse.gmf.runtime.notation.View) ((org.eclipse.core.runtime.IAdaptable) element).getAdapter(org.eclipse.gmf.runtime.notation.View.class);
	if (view != null && isOwnView(view)) {
		return getText(view);
	}
}

		return super.getText(element);
}
	
		/**
 * @generated
 */
public String getText(org.eclipse.gmf.runtime.notation.View view) {
	if (view.getElement() != null && view.getElement().eIsProxy()) {
		return getUnresolvedDomainElementProxyText(view);
	}
		switch (ui_concrete.diagram.part.Ui_concreteVisualIDRegistry.getVisualID(view)) {
		case ui_concrete.diagram.edit.parts.UI_DiagramEditPart.VISUAL_ID:
	return getUI_Diagram_1000Text(view);
case ui_concrete.diagram.edit.parts.UserInterfaceEditPart.VISUAL_ID:
	return getUserInterface_2001Text(view);
case ui_concrete.diagram.edit.parts.GroupEditPart.VISUAL_ID:
	return getGroup_3001Text(view);
case ui_concrete.diagram.edit.parts.Group2EditPart.VISUAL_ID:
	return getGroup_3002Text(view);
case ui_concrete.diagram.edit.parts.ButtonEditPart.VISUAL_ID:
	return getButton_3003Text(view);
case ui_concrete.diagram.edit.parts.LabelEditPart.VISUAL_ID:
	return getLabel_3004Text(view);
case ui_concrete.diagram.edit.parts.CheckBoxEditPart.VISUAL_ID:
	return getCheckBox_3005Text(view);
case ui_concrete.diagram.edit.parts.TextInputEditPart.VISUAL_ID:
	return getTextInput_3006Text(view);
case ui_concrete.diagram.edit.parts.ImageEditPart.VISUAL_ID:
	return getImage_3007Text(view);
case ui_concrete.diagram.edit.parts.ListEditPart.VISUAL_ID:
	return getList_3008Text(view);
case ui_concrete.diagram.edit.parts.RadioButtonEditPart.VISUAL_ID:
	return getRadioButton_3009Text(view);
case ui_concrete.diagram.edit.parts.Button2EditPart.VISUAL_ID:
	return getButton_3010Text(view);
case ui_concrete.diagram.edit.parts.Label2EditPart.VISUAL_ID:
	return getLabel_3011Text(view);
case ui_concrete.diagram.edit.parts.CheckBox2EditPart.VISUAL_ID:
	return getCheckBox_3012Text(view);
case ui_concrete.diagram.edit.parts.TextInput2EditPart.VISUAL_ID:
	return getTextInput_3013Text(view);
case ui_concrete.diagram.edit.parts.Image2EditPart.VISUAL_ID:
	return getImage_3014Text(view);
case ui_concrete.diagram.edit.parts.List2EditPart.VISUAL_ID:
	return getList_3015Text(view);
case ui_concrete.diagram.edit.parts.RadioButton2EditPart.VISUAL_ID:
	return getRadioButton_3016Text(view);
	}
		return getUnknownElementText(view);
}
	
		/**
 * @generated
 */
private String getUI_Diagram_1000Text(org.eclipse.gmf.runtime.notation.View view) {
					return "";  //$NON-NLS-1$
	}
	/**
 * @generated
 */
private String getUserInterface_2001Text(org.eclipse.gmf.runtime.notation.View view) {
					org.eclipse.gmf.runtime.common.ui.services.parser.IParser parser = ui_concrete.diagram.providers.Ui_concreteParserProvider.getParser(ui_concrete.diagram.providers.Ui_concreteElementTypes.UserInterface_2001, view.getElement() != null ? view.getElement() : view, ui_concrete.diagram.part.Ui_concreteVisualIDRegistry.getType(ui_concrete.diagram.edit.parts.UserInterfaceTitleEditPart.VISUAL_ID));
if (parser != null) {
	return parser.getPrintString(new org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter(view.getElement() != null ? view.getElement() : view), org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions.NONE.intValue());
} else {
	ui_concrete.diagram.part.Ui_concreteDiagramEditorPlugin.getInstance().logError("Parser was not found for label " + 5017); //$NON-NLS-1$
	return "";  //$NON-NLS-1$
}
	}
	/**
 * @generated
 */
private String getGroup_3001Text(org.eclipse.gmf.runtime.notation.View view) {
					org.eclipse.gmf.runtime.common.ui.services.parser.IParser parser = ui_concrete.diagram.providers.Ui_concreteParserProvider.getParser(ui_concrete.diagram.providers.Ui_concreteElementTypes.Group_3001, view.getElement() != null ? view.getElement() : view, ui_concrete.diagram.part.Ui_concreteVisualIDRegistry.getType(ui_concrete.diagram.edit.parts.GroupTitleEditPart.VISUAL_ID));
if (parser != null) {
	return parser.getPrintString(new org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter(view.getElement() != null ? view.getElement() : view), org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions.NONE.intValue());
} else {
	ui_concrete.diagram.part.Ui_concreteDiagramEditorPlugin.getInstance().logError("Parser was not found for label " + 5009); //$NON-NLS-1$
	return "";  //$NON-NLS-1$
}
	}
	/**
 * @generated
 */
private String getGroup_3002Text(org.eclipse.gmf.runtime.notation.View view) {
					org.eclipse.gmf.runtime.common.ui.services.parser.IParser parser = ui_concrete.diagram.providers.Ui_concreteParserProvider.getParser(ui_concrete.diagram.providers.Ui_concreteElementTypes.Group_3002, view.getElement() != null ? view.getElement() : view, ui_concrete.diagram.part.Ui_concreteVisualIDRegistry.getType(ui_concrete.diagram.edit.parts.GroupTitle2EditPart.VISUAL_ID));
if (parser != null) {
	return parser.getPrintString(new org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter(view.getElement() != null ? view.getElement() : view), org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions.NONE.intValue());
} else {
	ui_concrete.diagram.part.Ui_concreteDiagramEditorPlugin.getInstance().logError("Parser was not found for label " + 5008); //$NON-NLS-1$
	return "";  //$NON-NLS-1$
}
	}
	/**
 * @generated
 */
private String getButton_3003Text(org.eclipse.gmf.runtime.notation.View view) {
					org.eclipse.gmf.runtime.common.ui.services.parser.IParser parser = ui_concrete.diagram.providers.Ui_concreteParserProvider.getParser(ui_concrete.diagram.providers.Ui_concreteElementTypes.Button_3003, view.getElement() != null ? view.getElement() : view, ui_concrete.diagram.part.Ui_concreteVisualIDRegistry.getType(ui_concrete.diagram.edit.parts.ButtonTextEditPart.VISUAL_ID));
if (parser != null) {
	return parser.getPrintString(new org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter(view.getElement() != null ? view.getElement() : view), org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions.NONE.intValue());
} else {
	ui_concrete.diagram.part.Ui_concreteDiagramEditorPlugin.getInstance().logError("Parser was not found for label " + 5001); //$NON-NLS-1$
	return "";  //$NON-NLS-1$
}
	}
	/**
 * @generated
 */
private String getLabel_3004Text(org.eclipse.gmf.runtime.notation.View view) {
					org.eclipse.gmf.runtime.common.ui.services.parser.IParser parser = ui_concrete.diagram.providers.Ui_concreteParserProvider.getParser(ui_concrete.diagram.providers.Ui_concreteElementTypes.Label_3004, view.getElement() != null ? view.getElement() : view, ui_concrete.diagram.part.Ui_concreteVisualIDRegistry.getType(ui_concrete.diagram.edit.parts.LabelTextEditPart.VISUAL_ID));
if (parser != null) {
	return parser.getPrintString(new org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter(view.getElement() != null ? view.getElement() : view), org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions.NONE.intValue());
} else {
	ui_concrete.diagram.part.Ui_concreteDiagramEditorPlugin.getInstance().logError("Parser was not found for label " + 5002); //$NON-NLS-1$
	return "";  //$NON-NLS-1$
}
	}
	/**
 * @generated
 */
private String getCheckBox_3005Text(org.eclipse.gmf.runtime.notation.View view) {
					org.eclipse.gmf.runtime.common.ui.services.parser.IParser parser = ui_concrete.diagram.providers.Ui_concreteParserProvider.getParser(ui_concrete.diagram.providers.Ui_concreteElementTypes.CheckBox_3005, view.getElement() != null ? view.getElement() : view, ui_concrete.diagram.part.Ui_concreteVisualIDRegistry.getType(ui_concrete.diagram.edit.parts.CheckBoxNameEditPart.VISUAL_ID));
if (parser != null) {
	return parser.getPrintString(new org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter(view.getElement() != null ? view.getElement() : view), org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions.NONE.intValue());
} else {
	ui_concrete.diagram.part.Ui_concreteDiagramEditorPlugin.getInstance().logError("Parser was not found for label " + 5003); //$NON-NLS-1$
	return "";  //$NON-NLS-1$
}
	}
	/**
 * @generated
 */
private String getTextInput_3006Text(org.eclipse.gmf.runtime.notation.View view) {
					org.eclipse.gmf.runtime.common.ui.services.parser.IParser parser = ui_concrete.diagram.providers.Ui_concreteParserProvider.getParser(ui_concrete.diagram.providers.Ui_concreteElementTypes.TextInput_3006, view.getElement() != null ? view.getElement() : view, ui_concrete.diagram.part.Ui_concreteVisualIDRegistry.getType(ui_concrete.diagram.edit.parts.TextInputTextEditPart.VISUAL_ID));
if (parser != null) {
	return parser.getPrintString(new org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter(view.getElement() != null ? view.getElement() : view), org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions.NONE.intValue());
} else {
	ui_concrete.diagram.part.Ui_concreteDiagramEditorPlugin.getInstance().logError("Parser was not found for label " + 5004); //$NON-NLS-1$
	return "";  //$NON-NLS-1$
}
	}
	/**
 * @generated
 */
private String getImage_3007Text(org.eclipse.gmf.runtime.notation.View view) {
					org.eclipse.gmf.runtime.common.ui.services.parser.IParser parser = ui_concrete.diagram.providers.Ui_concreteParserProvider.getParser(ui_concrete.diagram.providers.Ui_concreteElementTypes.Image_3007, view.getElement() != null ? view.getElement() : view, ui_concrete.diagram.part.Ui_concreteVisualIDRegistry.getType(ui_concrete.diagram.edit.parts.ImageNameEditPart.VISUAL_ID));
if (parser != null) {
	return parser.getPrintString(new org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter(view.getElement() != null ? view.getElement() : view), org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions.NONE.intValue());
} else {
	ui_concrete.diagram.part.Ui_concreteDiagramEditorPlugin.getInstance().logError("Parser was not found for label " + 5005); //$NON-NLS-1$
	return "";  //$NON-NLS-1$
}
	}
	/**
 * @generated
 */
private String getList_3008Text(org.eclipse.gmf.runtime.notation.View view) {
					org.eclipse.gmf.runtime.common.ui.services.parser.IParser parser = ui_concrete.diagram.providers.Ui_concreteParserProvider.getParser(ui_concrete.diagram.providers.Ui_concreteElementTypes.List_3008, view.getElement() != null ? view.getElement() : view, ui_concrete.diagram.part.Ui_concreteVisualIDRegistry.getType(ui_concrete.diagram.edit.parts.ListNameEditPart.VISUAL_ID));
if (parser != null) {
	return parser.getPrintString(new org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter(view.getElement() != null ? view.getElement() : view), org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions.NONE.intValue());
} else {
	ui_concrete.diagram.part.Ui_concreteDiagramEditorPlugin.getInstance().logError("Parser was not found for label " + 5006); //$NON-NLS-1$
	return "";  //$NON-NLS-1$
}
	}
	/**
 * @generated
 */
private String getRadioButton_3009Text(org.eclipse.gmf.runtime.notation.View view) {
					org.eclipse.gmf.runtime.common.ui.services.parser.IParser parser = ui_concrete.diagram.providers.Ui_concreteParserProvider.getParser(ui_concrete.diagram.providers.Ui_concreteElementTypes.RadioButton_3009, view.getElement() != null ? view.getElement() : view, ui_concrete.diagram.part.Ui_concreteVisualIDRegistry.getType(ui_concrete.diagram.edit.parts.RadioButtonNameEditPart.VISUAL_ID));
if (parser != null) {
	return parser.getPrintString(new org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter(view.getElement() != null ? view.getElement() : view), org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions.NONE.intValue());
} else {
	ui_concrete.diagram.part.Ui_concreteDiagramEditorPlugin.getInstance().logError("Parser was not found for label " + 5007); //$NON-NLS-1$
	return "";  //$NON-NLS-1$
}
	}
	/**
 * @generated
 */
private String getButton_3010Text(org.eclipse.gmf.runtime.notation.View view) {
					org.eclipse.gmf.runtime.common.ui.services.parser.IParser parser = ui_concrete.diagram.providers.Ui_concreteParserProvider.getParser(ui_concrete.diagram.providers.Ui_concreteElementTypes.Button_3010, view.getElement() != null ? view.getElement() : view, ui_concrete.diagram.part.Ui_concreteVisualIDRegistry.getType(ui_concrete.diagram.edit.parts.ButtonText2EditPart.VISUAL_ID));
if (parser != null) {
	return parser.getPrintString(new org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter(view.getElement() != null ? view.getElement() : view), org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions.NONE.intValue());
} else {
	ui_concrete.diagram.part.Ui_concreteDiagramEditorPlugin.getInstance().logError("Parser was not found for label " + 5010); //$NON-NLS-1$
	return "";  //$NON-NLS-1$
}
	}
	/**
 * @generated
 */
private String getLabel_3011Text(org.eclipse.gmf.runtime.notation.View view) {
					org.eclipse.gmf.runtime.common.ui.services.parser.IParser parser = ui_concrete.diagram.providers.Ui_concreteParserProvider.getParser(ui_concrete.diagram.providers.Ui_concreteElementTypes.Label_3011, view.getElement() != null ? view.getElement() : view, ui_concrete.diagram.part.Ui_concreteVisualIDRegistry.getType(ui_concrete.diagram.edit.parts.LabelText2EditPart.VISUAL_ID));
if (parser != null) {
	return parser.getPrintString(new org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter(view.getElement() != null ? view.getElement() : view), org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions.NONE.intValue());
} else {
	ui_concrete.diagram.part.Ui_concreteDiagramEditorPlugin.getInstance().logError("Parser was not found for label " + 5011); //$NON-NLS-1$
	return "";  //$NON-NLS-1$
}
	}
	/**
 * @generated
 */
private String getCheckBox_3012Text(org.eclipse.gmf.runtime.notation.View view) {
					org.eclipse.gmf.runtime.common.ui.services.parser.IParser parser = ui_concrete.diagram.providers.Ui_concreteParserProvider.getParser(ui_concrete.diagram.providers.Ui_concreteElementTypes.CheckBox_3012, view.getElement() != null ? view.getElement() : view, ui_concrete.diagram.part.Ui_concreteVisualIDRegistry.getType(ui_concrete.diagram.edit.parts.CheckBoxName2EditPart.VISUAL_ID));
if (parser != null) {
	return parser.getPrintString(new org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter(view.getElement() != null ? view.getElement() : view), org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions.NONE.intValue());
} else {
	ui_concrete.diagram.part.Ui_concreteDiagramEditorPlugin.getInstance().logError("Parser was not found for label " + 5012); //$NON-NLS-1$
	return "";  //$NON-NLS-1$
}
	}
	/**
 * @generated
 */
private String getTextInput_3013Text(org.eclipse.gmf.runtime.notation.View view) {
					org.eclipse.gmf.runtime.common.ui.services.parser.IParser parser = ui_concrete.diagram.providers.Ui_concreteParserProvider.getParser(ui_concrete.diagram.providers.Ui_concreteElementTypes.TextInput_3013, view.getElement() != null ? view.getElement() : view, ui_concrete.diagram.part.Ui_concreteVisualIDRegistry.getType(ui_concrete.diagram.edit.parts.TextInputText2EditPart.VISUAL_ID));
if (parser != null) {
	return parser.getPrintString(new org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter(view.getElement() != null ? view.getElement() : view), org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions.NONE.intValue());
} else {
	ui_concrete.diagram.part.Ui_concreteDiagramEditorPlugin.getInstance().logError("Parser was not found for label " + 5013); //$NON-NLS-1$
	return "";  //$NON-NLS-1$
}
	}
	/**
 * @generated
 */
private String getImage_3014Text(org.eclipse.gmf.runtime.notation.View view) {
					org.eclipse.gmf.runtime.common.ui.services.parser.IParser parser = ui_concrete.diagram.providers.Ui_concreteParserProvider.getParser(ui_concrete.diagram.providers.Ui_concreteElementTypes.Image_3014, view.getElement() != null ? view.getElement() : view, ui_concrete.diagram.part.Ui_concreteVisualIDRegistry.getType(ui_concrete.diagram.edit.parts.ImageName2EditPart.VISUAL_ID));
if (parser != null) {
	return parser.getPrintString(new org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter(view.getElement() != null ? view.getElement() : view), org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions.NONE.intValue());
} else {
	ui_concrete.diagram.part.Ui_concreteDiagramEditorPlugin.getInstance().logError("Parser was not found for label " + 5014); //$NON-NLS-1$
	return "";  //$NON-NLS-1$
}
	}
	/**
 * @generated
 */
private String getList_3015Text(org.eclipse.gmf.runtime.notation.View view) {
					org.eclipse.gmf.runtime.common.ui.services.parser.IParser parser = ui_concrete.diagram.providers.Ui_concreteParserProvider.getParser(ui_concrete.diagram.providers.Ui_concreteElementTypes.List_3015, view.getElement() != null ? view.getElement() : view, ui_concrete.diagram.part.Ui_concreteVisualIDRegistry.getType(ui_concrete.diagram.edit.parts.ListName2EditPart.VISUAL_ID));
if (parser != null) {
	return parser.getPrintString(new org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter(view.getElement() != null ? view.getElement() : view), org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions.NONE.intValue());
} else {
	ui_concrete.diagram.part.Ui_concreteDiagramEditorPlugin.getInstance().logError("Parser was not found for label " + 5015); //$NON-NLS-1$
	return "";  //$NON-NLS-1$
}
	}
	/**
 * @generated
 */
private String getRadioButton_3016Text(org.eclipse.gmf.runtime.notation.View view) {
					org.eclipse.gmf.runtime.common.ui.services.parser.IParser parser = ui_concrete.diagram.providers.Ui_concreteParserProvider.getParser(ui_concrete.diagram.providers.Ui_concreteElementTypes.RadioButton_3016, view.getElement() != null ? view.getElement() : view, ui_concrete.diagram.part.Ui_concreteVisualIDRegistry.getType(ui_concrete.diagram.edit.parts.RadioButtonName2EditPart.VISUAL_ID));
if (parser != null) {
	return parser.getPrintString(new org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter(view.getElement() != null ? view.getElement() : view), org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions.NONE.intValue());
} else {
	ui_concrete.diagram.part.Ui_concreteDiagramEditorPlugin.getInstance().logError("Parser was not found for label " + 5016); //$NON-NLS-1$
	return "";  //$NON-NLS-1$
}
	}
	
		/**
 * @generated
 */
private String getUnknownElementText(org.eclipse.gmf.runtime.notation.View view) {
	return "<UnknownElement Visual_ID = " + view.getType() + ">";  //$NON-NLS-1$  //$NON-NLS-2$
}
	
		/**
 * @generated
 */
private String getUnresolvedDomainElementProxyText(org.eclipse.gmf.runtime.notation.View view) {
	return "<Unresolved domain element Visual_ID = " + view.getType() + ">";  //$NON-NLS-1$  //$NON-NLS-2$
}
	
		/**
 * @generated
 */
public void init(org.eclipse.ui.navigator.ICommonContentExtensionSite aConfig) {
}

		/**
 * @generated
 */
public void restoreState(org.eclipse.ui.IMemento aMemento) {
}

		/**
 * @generated
 */
public void saveState(org.eclipse.ui.IMemento aMemento) {
}
	
		/**
 * @generated
 */
public String getDescription(Object anElement) {
	return null;
}
	
		/**
 * @generated
 */
private boolean isOwnView(org.eclipse.gmf.runtime.notation.View view) {
	return ui_concrete.diagram.edit.parts.UI_DiagramEditPart.MODEL_ID.equals(ui_concrete.diagram.part.Ui_concreteVisualIDRegistry.getModelID(view));
}

	}
