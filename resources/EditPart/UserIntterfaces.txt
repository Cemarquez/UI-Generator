	protected void handleNotificationEvent(Notification event) {
		if (event.getNotifier() == getModel()
				&& EcorePackage.eINSTANCE.getEModelElement_EAnnotations().equals(event.getFeature())) {
			handleMajorSemanticChange();
		} else {
			if (event.getEventType() == Notification.SET) {
				// the notifier sends his new Bounds ...
				/**
				 	<property name="label" translatable="yes">Acepto los terminos y condiciones y autorizo el
					tratamiento de mis datos personales.</property>
				    <property name="width-request">300</property>
				    <property name="height-request">80</property>
				    <property name="visible">True</property>
				    <property name="can-focus">True</property>
				    <property name="receives-default">False</property>
				    <property name="draw-indicator">True</property>
				 **/
				if (event.getNotifier() instanceof BoundsImpl) {
					NodeImpl node = (NodeImpl) this.getModel();
					UserInterface model = (UserInterface) node.getElement();
					BoundsImpl notifier = (BoundsImpl) event.getNotifier();

					// for my special coordinate mapping i also need the node,
					// so i save it in this variable ...

					if (event.getFeature() instanceof EAttributeImpl) {
						// Get the attribute that has changed
						EAttributeImpl attribute = (EAttributeImpl) event.getFeature();
						// set the values for x and y in the model
						if (notifier.getWidth() == -1) {
							model.setWidth(400);
						} else {
							model.setWidth(notifier.getWidth());
						}
						if (notifier.getHeight() == -1) {
							model.setHeight(800);
						} else {
							model.setHeight(notifier.getHeight());
						}


					}
				}

			}

		}
		super.handleNotificationEvent(event);

	}